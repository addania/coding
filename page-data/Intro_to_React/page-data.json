{"componentChunkName":"component---src-templates-blog-post-js","path":"/Intro_to_React/","webpackCompilationHash":"52a009713053b0e1255d","result":{"data":{"markdownRemark":{"html":"<p>React is a library/framework of Javascript developed by Facebook. Reach allows to build interactive websites using components and allowing having html css and Javascript in one file.\nReact is a closed environmnet and can be run in browser, on your local machine (my pc) or on phones (such as Android, etc).</p>\n<p>When I am developing a website in React I need to be able to see what I am building. I can do these:</p>\n<p>A/ doubleclick on my html file (index.html) and open it in browser. However, it won't really work. Other pages will not load, because I am only openineg filepath in browser.</p>\n<p>B/ run a web server locally on my machine (pc)</p>\n<p>In order to run a web server on my machine, I need to install node.js</p>\n<p>In order to be able to use React in a BROWSER I need package called reactDOM package if I want to display it in browser. If I dont want to install reactDOM package, I can still use script tags in my html file, like so:</p>\n<pre><code>&#x3C;script src=\"https://unpkg.com/react@16/umd/react.development.js\" crossorigin>&#x3C;/script>\n&#x3C;script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\" crossorigin>&#x3C;/script>\n</code></pre>\n<blockquote>\n<p>More on this in official documentation here:</p>\n</blockquote>\n<p><a href=\"https://reactjs.org/docs/add-react-to-a-website.html\">https://reactjs.org/docs/add-react-to-a-website.html</a></p>\n<p>These script tags in html are equivalent to a file in my project called package.json which is automatically provided by Gatsby:</p>\n<pre><code>\"dependencies\": {\n    \"gatsby\": \"^2.15.28\",\n    \"react\": \"^16.10.0\",\n    \"react-dom\": \"^16.10.0\"\n},\n</code></pre>\n<blockquote>\n<p>There are 2 ways how I can import react. A) I need to </p>\n</blockquote>\n<pre><code>import React from \"react\";\n</code></pre>\n<blockquote>\n<p>Then Im using:</p>\n</blockquote>\n<pre><code>class MyClass extends React.Component(){\n\n}\n</code></pre>\n<blockquote>\n<p>B) I can only import { Component } from \"react\"</p>\n</blockquote>\n<pre><code>import { Component } from \"react\";\n</code></pre>\n<blockquote>\n<p>Then Im using:</p>\n</blockquote>\n<pre><code>class MyClass extends Component(){\n\n}\n</code></pre>\n<blockquote>\n<p>I can import ReactDOM in ways. Way number A is below. This way we import everything that is in ReactDOM, all their methods. On of their methods is called render:</p>\n</blockquote>\n<pre><code>import ReactDOM from \"react-dom\";\n</code></pre>\n<blockquote>\n<p>Then I am using this rendeer method:</p>\n</blockquote>\n<pre><code>ReactDOM.render(&#x3C;p>Hi&#x3C;/p>, document.getElementById(\"app\"));\n</code></pre>\n<blockquote>\n<p>Another way to import render: si the way B. In this way we are eonly cherr/picking to import one spcifi method from reactDOM and this method is calld render:</p>\n</blockquote>\n<pre><code>import { render } from\"react-dom\";\n</code></pre>\n<blockquote>\n<p>Then I am using this rendeer method:</p>\n</blockquote>\n<pre><code>render(&#x3C;p>Hi&#x3C;/p>, document.getElementById(\"app\"));\n</code></pre>\n<blockquote>\n<p>In render method we have 2 possibilities to generate our component in a specific DOM element:</p>\n</blockquote>\n<blockquote>\n<p>One way is to use document.getElementById</p>\n</blockquote>\n<pre><code>render(&#x3C;p>Hi&#x3C;/p>, document.getElementById(\"app\"));\n</code></pre>\n<blockquote>\n<p>Another way is to usee document.querySelector:</p>\n</blockquote>\n<pre><code>render(&#x3C;p>Hi&#x3C;/p>, document.querySelctor(\"#app\"));\n</code></pre>\n<blockquote>\n<p>Within react return statement I can only add  parent component:</p>\n</blockquote>\n<pre><code>class MyClass extends React.Component(){\nrender (){\n    return (\n        &#x3C;p>Hello&#x3C;/p>\n    )\n  }\n}\n</code></pre>\n<blockquote>\n<p>I cannot write this:</p>\n</blockquote>\n<pre><code>class MyClass extends React.Component(){\nrender (){\n    return (\n        &#x3C;p>Hello&#x3C;/p>\n        &#x3C;p>World&#x3C;/p>\n    )\n  }\n}\n</code></pre>\n<blockquote>\n<p>To solve to have paralell tags, we can wrap them in div:</p>\n</blockquote>\n<pre><code>class MyClass extends React.Component(){\nrender (){\n    return (\n        &#x3C;div>\n          &#x3C;p>Hello&#x3C;/p>\n          &#x3C;p>World&#x3C;/p>\n        &#x3C;/div>  \n    )\n  }\n}\n</code></pre>\n<blockquote>\n<p>Alternatively if we dont want to wrapt them in divs, we can wrap them in React.Fragment:</p>\n</blockquote>\n<pre><code>class MyClass extends React.Component(){\nrender (){\n    return (\n        &#x3C;React.Fragment>\n          &#x3C;p>Hello&#x3C;/p>\n          &#x3C;p>World&#x3C;/p>\n        &#x3C;/React.Fragment>  \n    )\n  }\n}\n</code></pre>","frontmatter":{"title":"Intro to React"},"excerpt":"React is a library/framework of Javascript developed by Facebook. Reach allows to build interactive websites using components and allowingâ€¦"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Intro_to_React/"}}}