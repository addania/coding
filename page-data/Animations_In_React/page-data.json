{"componentChunkName":"component---src-templates-blog-post-js","path":"/Animations_In_React/","result":{"data":{"markdownRemark":{"html":"<p><img src=\"https://i.imgur.com/5x14MUh.gif\" title=\"Photo by Unreal Engine\"></p>\n<blockquote>\n<p>Did you ever want to create a nice fireworks or confetti animation in your page?</p>\n</blockquote>\n<blockquote>\n<p>We will be using this library: <a href=\"https://www.npmjs.com/package/tsparticles-engine\">https://www.npmjs.com/package/tsparticles-engine</a></p>\n</blockquote>\n<blockquote>\n<p>Here are some demos: <a href=\"https://particles.js.org/samples/presets/index.html\">https://particles.js.org/samples/presets/index.html</a></p>\n</blockquote>\n<blockquote>\n<p>Make sure you first install following dependencies:</p>\n</blockquote>\n<pre><code>npm install react-particles\nnpm install react-tsparticles\nnpm install tsparticles\nnpm install tsparticles-engine\nnpm install tsparticles-preset-confetti\nnpm install tsparticles-preset-fireworks\n</code></pre>\n<blockquote>\n<p>Your package.json file should contain:</p>\n</blockquote>\n<pre><code>    \"react-particles\": \"^2.9.3\",\n    \"react-tsparticles\": \"^2.9.3\",\n    \"tsparticles\": \"^2.9.3\",\n    \"tsparticles-engine\": \"^2.9.3\",\n    \"tsparticles-preset-confetti\": \"^2.9.3\",\n    \"tsparticles-preset-fireworks\": \"^2.9.3\",\n</code></pre>\n<p><strong>Fireworks</strong></p>\n<blockquote>\n<p>We will first create some very easy <code>Fireworks</code> component which will primarily use fireworks-presets - some default values form the library</p>\n</blockquote>\n<blockquote>\n<p>Create a component Fireworks somewhere in your folder structure. In my case I created it in <code>components/animationEffects/Fireworks.tsx</code></p>\n</blockquote>\n<pre><code>import React from \"react\"\nimport Particles from \"react-tsparticles\";\nimport { loadFireworksPreset } from \"tsparticles-preset-fireworks\";\n\nexport const Fireworks = () => {\n  const customInit = async (engine) => {\n    // this adds the preset to tsParticles, you can safely use the\n    await loadFireworksPreset(engine);\n  };\n  return (\n    &#x3C;Particles\n      id=\"tsparticles\"\n      init={customInit}\n      options={{ preset: \"fireworks\" }}\n    />\n  );\n};\n</code></pre>\n<blockquote>\n<p>Then import it to your main application.</p>\n</blockquote>\n<pre><code>import * as React from \"react\";\nimport { type NextPage } from \"next\";\nimport Head from \"next/head\";\n\nimport { Fireworks } from \"./components/animationEffects/Fireworks\";\n\nconst Home: NextPage = () => {\n  const [showAnimation, setShowAnimation] = React.useState(false);\n\n  return (\n    &#x3C;>\n      &#x3C;Head>\n        &#x3C;title>Fireworks&#x3C;/title>\n        &#x3C;meta name=\"description\" content=\"Generated by create-t3-app\" />\n        &#x3C;link rel=\"icon\" href=\"/favicon.ico\" />\n      &#x3C;/Head>\n      &#x3C;main\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"100vh\",\n          backgroundImage: \"linear-gradient(to bottom, #2e026d, #15162c)\",\n        }}\n      >\n        {showAnimation &#x26;&#x26; &#x3C;Fireworks />}\n        &#x3C;button\n          style={{ zIndex: 1 }}\n          onClick={() => {\n            setShowAnimation(true);\n            setTimeout(() => {\n              setShowAnimation(false);\n            }, 5000);\n          }}\n        >\n          ✅ Start fireworks\n        &#x3C;/button>\n        &#x3C;button\n          style={{ zIndex: 1 }}\n          onClick={() => {\n            setShowAnimation(false);\n          }}\n        >\n          ❌ End fireworks\n        &#x3C;/button>\n      &#x3C;/main>\n    &#x3C;/>\n  );\n};\n\nexport default Home;\n</code></pre>\n<blockquote>\n<p>Notice how we have two buttons: Start and End fireworks.</p>\n</blockquote>\n<blockquote>\n<p>Start button will start the animation and there is a timer set to stop it automatically after 5 seconds</p>\n</blockquote>\n<blockquote>\n<p>Alternatively you can stop the animation manually with the End button.</p>\n</blockquote>\n<blockquote>\n<p>It is worth noting that this fireworks preset will be rendered in the background of your page and all content needs to have <code>z-index: 1</code> so that it is shown on top of your anomation.</p>\n</blockquote>\n<p><strong>Confetti</strong></p>\n<blockquote>\n<p>We will now create some very easy <code>Confetti</code> component which will primarily use confetti-presets - some default values form the library</p>\n</blockquote>\n<blockquote>\n<p>Create a component Confetti somewhere in your folder structure. In my case I created it in <code>components/animationEffects/Confetti.tsx</code></p>\n</blockquote>\n<pre><code>import React from \"react\"\nimport Particles from \"react-tsparticles\";\nimport { loadConfettiPreset } from \"tsparticles-preset-confetti\";\n\nexport const Confetti = () => {\n  const customInit = async (engine) => {\n    // this adds the preset to tsParticles, you can safely use the\n    await loadConfettiPreset(engine);\n  };\n  return (\n    &#x3C;Particles\n      id=\"tsparticles\"\n      init={customInit}\n      options={{ preset: \"confetti\" }}\n    />\n  );\n};\n</code></pre>\n<blockquote>\n<p>Then import it to your main application.</p>\n</blockquote>\n<pre><code>import * as React from \"react\";\nimport { type NextPage } from \"next\";\nimport Head from \"next/head\";\n\nimport { Confetti } from \"./components/animationEffects/Confetti\";\n\nconst Home: NextPage = () => {\n  const [showAnimation, setShowAnimation] = React.useState(false);\n\n  return (\n    &#x3C;>\n      &#x3C;Head>\n        &#x3C;title>Fireworks&#x3C;/title>\n        &#x3C;meta name=\"description\" content=\"Generated by create-t3-app\" />\n        &#x3C;link rel=\"icon\" href=\"/favicon.ico\" />\n      &#x3C;/Head>\n      &#x3C;main\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"100vh\",\n          backgroundImage: \"linear-gradient(to bottom, #2e026d, #15162c)\",\n        }}\n      >\n        {showAnimation &#x26;&#x26; &#x3C;Confetti />}\n        &#x3C;button\n          style={{ zIndex: 1 }}\n          onClick={() => {\n            setShowAnimation(true);\n            setTimeout(() => {\n              setShowAnimation(false);\n            }, 5000);\n          }}\n        >\n          ✅ Start confetti\n        &#x3C;/button>\n        &#x3C;button\n          style={{ zIndex: 1 }}\n          onClick={() => {\n            setShowAnimation(false);\n          }}\n        >\n          ❌ End confetti\n        &#x3C;/button>\n      &#x3C;/main>\n    &#x3C;/>\n  );\n};\n\nexport default Home;\n</code></pre>\n<blockquote>\n<p>Notice how we have two buttons: Start and End confetti.</p>\n</blockquote>\n<blockquote>\n<p>Start button will start the animation and there is a timer set to stop it automatically after 5 seconds</p>\n</blockquote>\n<blockquote>\n<p>Alternatively you can stop the animation manually with the End button.</p>\n</blockquote>\n<blockquote>\n<p>It is worth noting that this fireworks preset will be rendered in the background of your page and all content needs to have <code>z-index: 1</code> so that it is shown on top of your anomation.</p>\n</blockquote>\n<p><strong>Polygons</strong></p>\n<blockquote>\n<p>We will now create some very easy <code>Polygons</code> component which will use its own options</p>\n</blockquote>\n<blockquote>\n<p>Create a component Polygons somewhere in your folder structure. In my case I created it in <code>components/animationEffects/Polygons.tsx</code></p>\n</blockquote>\n<pre><code>import React from \"react\"\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nexport const Polygons = () => {\n  const particlesInit = async (main) => {\n    console.log(main);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n\n  return (\n    &#x3C;Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      loaded={particlesLoaded}\n      options={{\n        background: {\n          color: {\n            value: \"#0d47a1\",\n          },\n        },\n        fpsLimit: 120,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: \"push\",\n            },\n            onHover: {\n              enable: true,\n              mode: \"repulse\",\n            },\n            resize: true,\n          },\n          modes: {\n            push: {\n              quantity: 4,\n            },\n            repulse: {\n              distance: 200,\n              duration: 0.4,\n            },\n          },\n        },\n        particles: {\n          color: {\n            value: \"#ffffff\",\n          },\n          links: {\n            color: \"#ffffff\",\n            distance: 150,\n            enable: true,\n            opacity: 0.5,\n            width: 1,\n          },\n          collisions: {\n            enable: true,\n          },\n          move: {\n            directions: \"none\",\n            enable: true,\n            outModes: {\n              default: \"bounce\",\n            },\n            random: false,\n            speed: 6,\n            straight: false,\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 800,\n            },\n            value: 80,\n          },\n          opacity: {\n            value: 0.5,\n          },\n          shape: {\n            type: \"circle\",\n          },\n          size: {\n            value: { min: 1, max: 5 },\n          },\n        },\n        detectRetina: true,\n      }}\n    />\n  );\n};\n</code></pre>\n<blockquote>\n<p>Then import it to your main application.</p>\n</blockquote>\n<pre><code>import * as React from \"react\";\nimport { type NextPage } from \"next\";\nimport Head from \"next/head\";\n\nimport { Polygons } from \"./components/animationEffects/Polygons\";\n\nconst Home: NextPage = () => {\n  const [showAnimation, setShowAnimation] = React.useState(false);\n\n  return (\n    &#x3C;>\n      &#x3C;Head>\n        &#x3C;title>Fireworks&#x3C;/title>\n        &#x3C;meta name=\"description\" content=\"Generated by create-t3-app\" />\n        &#x3C;link rel=\"icon\" href=\"/favicon.ico\" />\n      &#x3C;/Head>\n      &#x3C;main\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"100vh\",\n          backgroundImage: \"linear-gradient(to bottom, #2e026d, #15162c)\",\n        }}\n      >\n        {showAnimation &#x26;&#x26; &#x3C;Polygons />}\n        &#x3C;button\n          style={{ zIndex: 1 }}\n          onClick={() => {\n            setShowAnimation(true);\n            setTimeout(() => {\n              setShowAnimation(false);\n            }, 5000);\n          }}\n        >\n          ✅ Start polygons\n        &#x3C;/button>\n        &#x3C;button\n          style={{ zIndex: 1 }}\n          onClick={() => {\n            setShowAnimation(false);\n          }}\n        >\n          ❌ End polygons\n        &#x3C;/button>\n      &#x3C;/main>\n    &#x3C;/>\n  );\n};\n\nexport default Home;\n</code></pre>\n<blockquote>\n<p>Notice that all the options are customizable and you can play around with them. For example you can change the particles shape, size, density, ... just to mension a few:</p>\n</blockquote>\n<pre><code>shape: {\n    type: \"circle\",\n},\nsize: {\n    value: { min: 1, max: 5 },\n},\n</code></pre>\n<blockquote>\n<p>Notice how we have two buttons: Start and End confetti.</p>\n</blockquote>\n<blockquote>\n<p>Start button will start the animation and there is a timer set to stop it automatically after 5 seconds</p>\n</blockquote>\n<blockquote>\n<p>Alternatively you can stop the animation manually with the End button.</p>\n</blockquote>\n<blockquote>\n<p>It is worth noting that this fireworks preset will be rendered in the background of your page and all content needs to have <code>z-index: 1</code> so that it is shown on top of your anomation.</p>\n</blockquote>","frontmatter":{"title":"Particle animations in React"},"excerpt":"Did you ever want to create a nice fireworks or confetti animation in your page? We will be using this library: https://www.npmjs.com…"}},"pageContext":{"slug":"/Animations_In_React/"}},"staticQueryHashes":["2199005656","63159454"]}