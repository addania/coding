{"componentChunkName":"component---src-templates-blog-post-js","path":"/Accessing_Props/","webpackCompilationHash":"c1aa181bd30501fccdfe","result":{"data":{"markdownRemark":{"html":"<p><img src=\"https://i.imgur.com/fEZTMxH.jpg\" title=\"Photo by Gnist Design from Pexels\"></p>\n<p>There are two ways how to access props passed to a component.</p>\n<p><strong>a)</strong> Using props as argument of the functional component and accessing them with <code>props.name</code></p>\n<pre><code>const Button = (props) => {\n  return (\n      &#x3C;p>{props.name}&#x3C;/p>\n  )\n}\n</code></pre>\n<p><strong>b)</strong> Passing name of prop inside curly brackets of the functional component and then accessing props with <code>name</code></p>\n<pre><code>const Button = ({name}) => {\n  return (\n      &#x3C;p>{name}&#x3C;/p>\n  )\n}\n</code></pre>\n<p>Alternative b allows only passing specific props to the component, instead of passing ALL of them.</p>","frontmatter":{"title":"Accessing Props"},"excerpt":"There are two ways how to access props passed to a component. a) Using props as argument of the functional component and accessing them withâ€¦"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Accessing_Props/"}}}