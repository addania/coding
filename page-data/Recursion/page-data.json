{"componentChunkName":"component---src-templates-blog-post-js","path":"/Recursion/","webpackCompilationHash":"68f60c913670837350d5","result":{"data":{"markdownRemark":{"html":"<p>Recusion is a function that calls itself.</p>\n<p>Example usage of recursive functions to calculate factorial. lets say we want to calculate factorial of number <code>n</code>. If <code>n=3</code>, then factorial of <code>n</code> is <code><code>3*2*1</code>=6</code></p>\n<pre><code>function factorial(n){\n  if (n==1){\n    return 1\n  }\n  if (n>1){\n    return n*factorial(n-1);\n  }\n}\n\nlet number=factorial(3);\n// result: 3*2*1=6\n</code></pre>\n<p>Example usage of recursive functions to calculate number to certain power. Imagine we want to calculate </ode>3</code> to the power of <code>2</code>. We would need to multiply <code>3*3=9</code>. Lets define that <code>x</code> is our number and <code>n</code> is the power.</p>\n<pre><code>function power(x, n){\n  if (n==1){\n    return x\n  }else {\n    return x* power(x, n-1);\n  }\n}\n\npower(2,3);\n// returns 8\n\npower(3,2);\n// returns 9\n</code></pre>\n<p>Example usage of recursive functions to calculate salaries in a company in different departments or sub-departments. Imagine we have an object like this:</p>\n<pre><code>let company={ \n  sales: [{name: \"Mia\", plat: 1000},{name: \"Sam\", plat: 1500}], \n  development: {\n    onsite: [{name: \"Peter\", plat: 500}, {name: \"Edita\", plat: 1200} ],\n    remote: [{name: \"Lubo\", plat: 3000}, {name: \"Peta\", plat: 800} ]\n\n    }\n}\n</code></pre>\n<p>Example usage to sum the the numbers <code>1+2+3+...+ n</code></p>\n<pre><code>function sumTo(n){\n  if (n==1){\n   return n\n  } else {\n  return n+ sumTo(n-1);\n  }\n\n}\n\nlet result=sumTo(3);\n// result is: 6\n</code></pre>\n<p>Then we can use a recursive function to calculate the sum of salaries:</p>\n<pre><code>function salarySum(department){\n  if (Array.isArray(department)){\n\n    return department.reduce( (prev, current) => \n    prev + current, 0 )\n  } else {\n    let sum =0;\n    for (let subdep of Object.values(department)){\n     sum= sum + salarySum(subdep);\n    }\n    return sum,\n  }\n\n}\n</code></pre>\n<p>Lets call the function and see the result:</p>\n<pre><code>let result= salarySum(company);\n// result is: 8000\n</code></pre>","frontmatter":{"title":"Recursion"},"excerpt":"Recusion is a function that calls itself. Example usage of recursive functions to calculate factorial. lets say we want to calculateâ€¦"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Recursion/"}}}