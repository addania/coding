{"componentChunkName":"component---src-templates-blog-post-js","path":"/Debugging/","webpackCompilationHash":"ee6e95aeb45b1026a6a5","result":{"data":{"markdownRemark":{"html":"<p>When we are in the code and we add somewhere this line:</p>\n<pre><code>debugger;\n</code></pre>\n<p>we are able to execute code only up until this line. </p>\n<p>You need to go to your website and open the DEV TOOLS (without opening dev tools you wont be able to see the debugger stopping at the given place)</p>\n<p>Automatical execution will stop and we will be able to use console to check for any value of the variable. </p>\n<p>For example if we put debugger to onClick event handler, we can type in console:</p>\n<pre><code>event\n</code></pre>\n<p>and we will see the whole event object.</p>\n<p>we can put</p>\n<pre><code>event.target\n</code></pre>\n<p>and see all the options we have that can be used as event.target. This set it pre-defined and doesnt display any custom value.</p>\n<p>To read custom properties, we can use:</p>\n<pre><code>event.target.attribute\n</code></pre>\n<p>For example if we gave our button attribute last, then we can access it by</p>\n<pre><code>event.target.attribute.last\n</code></pre>\n<p>If we wanted to access what is in between of the closing and ending tag of button we write</p>\n<pre><code>event.target.attribute.innerHTML\n</code></pre>\n<p>Please Note: React does not persist the events. Therefore many of those values might be empty. We can add this line to our code:</p>\n<pre><code>event.persist();\n</code></pre>","frontmatter":{"title":"Debugging"},"excerpt":"When we are in the code and we add somewhere this line: we are able to execute code only up until this line.  You need to go to your websiteâ€¦"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Debugging/"}}}