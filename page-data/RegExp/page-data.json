{"componentChunkName":"component---src-templates-blog-post-js","path":"/RegExp/","webpackCompilationHash":"ab027b07f7dbc3309506","result":{"data":{"markdownRemark":{"html":"<p><img src=\"https://i.imgur.com/HaPRiVv.jpg\" title=\"Photo from destructoid.com\"><p style=\"font-size: 12px; text-align: right\"><em>Photo from destructoid.com</em></p></p>\n<blockquote>\n<p>Using regular expressions in Javascript can be very powerful but also tricky for newbies like me. </p>\n</blockquote>\n<blockquote>\n<p>Let's start with a problem. All over your brand new blog you have beautiful images! They come from different websites like Pexels, Pixabay, and were created by different people. But you, as a proper <code>hacker</code>, want to claim all those spectacular images as YOURS.. your preciouses ðŸ˜ˆ</p>\n</blockquote>\n<blockquote>\n<p>You get strings such as:</p>\n</blockquote>\n<pre><code>\"Photo from pixabay.com\"\n\"Photo by Random Person from Pexels\"\n</code></pre>\n<blockquote>\n<p>What you want to achieve is ultimately that those result in:</p>\n</blockquote>\n<pre><code>\"Photo by Addania\"\n</code></pre>\n<blockquote>\n<p>We can write a function that will replace random people and random websits with your own signature :)</p>\n</blockquote>\n<pre><code>const replaceAuthor = (string) => {\n    return string.replace(/(Photo by .+ from Pexels)|(Photo from \\b(\\w*.com\\w*)\\b)|(Photo from \\w+)/, \"Photo by Addania\")\n}\nconsole.log(replaceAuthor(\"Photo from pixabay.com\"))\nconsole.log(replaceAuthor(\"Photo by Random Person from Pexels\"))\n</code></pre>\n<blockquote>\n<p>Please note that <code>.replace</code> is a string method which takes in 2 arguments:</p>\n<ul>\n<li>1st one is a regular expression which we denote with <code>/</code> at the beginning and at the end</li>\n<li>2nd argument is a string which will replace whatever regexp from the first argument matches (interestingly the 2nd argument can also be a function)</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>Also note that the regular expression itself looks like this:</p>\n</blockquote>\n<pre><code>/(Photo by .+ from Pexels)|(Photo from \\b(\\w*.com\\w*)\\b)|(Photo from \\w+)/\n</code></pre>\n<blockquote>\n<p>It consists of 3 parts:</p>\n</blockquote>\n<ul>\n<li><code>Photo by .+ from Pexels</code> - basically \"Photo by\" ANYTHING and then followed by \"from Pexels\"</li>\n</ul>\n<p>OR (denoted with <code>/</code>)</p>\n<ul>\n<li><code>Photo from \\b(\\w*.com\\w*)\\b</code>  - basically \"Photo from\" and then 1 single word with \".com\" at the end</li>\n</ul>\n<p>OR (denoted with <code>/</code>)</p>\n<ul>\n<li><code>Photo from \\w+</code> - basically \"Photo from\" and then 1 single word</li>\n</ul>\n<blockquote>\n<p>Quick beginners course on regular expressions can be found at <a href=\"https://regexone.com/\">regexone.com</a></p>\n</blockquote>\n<blockquote>\n<p>Great online tool to test if your regular expression works is at <a href=\"https://regex101.com/\">regex101.com</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/uZmysyC.jpg\" title=\"Photo from theverge.com\"><p style=\"font-size: 12px; text-align: right\"><em>Photo from theverge.com</em></p></p>","frontmatter":{"title":"Using RegExp"},"excerpt":"Photo from destructoid.com Using regular expressions in Javascript can be very powerful but also tricky for newbies like me.  Let's startâ€¦"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/RegExp/"}}}