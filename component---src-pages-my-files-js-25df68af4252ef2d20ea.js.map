{"version":3,"sources":["webpack:///./src/pages/my-files.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js"],"names":["data","console","log","allFile","edges","map","index","node","key","base","prettySize","relativeDirectory","name","query","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","createElement","InternalPageRenderer","json","loader","enqueue","createContext","ListLink","props","style","display","marginRight","to","children","margin","maxWidth","padding","marginBottom","textShadow","backgroundImage","site","siteMetadata","author","listStyle","float","title","align"],"mappings":"0KAwBe,sBAAe,IAAZA,EAAW,EAAXA,KAEd,OADAC,QAAQC,IAAIF,GAER,kBAAC,IAAD,KACF,6BACE,+CACA,+BACE,+BACE,4BACE,oCACA,0CACA,iDACA,sCAGJ,+BACGA,EAAKG,QAAQC,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACtB,wBAAIC,IAAKF,GACP,4BAAKC,EAAKE,MACV,4BAAKF,EAAKG,YACV,4BAAKH,EAAKI,mBACV,4BAAKJ,EAAKK,eAWnB,IAAMC,EAAK,a,oBCxDlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,qNCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEC,IAAMC,cAAcC,IAApB,eACLJ,WACAC,iBACGA,EAAcI,OALV,O,2FCOcC,QAAOC,QAELL,IAAMM,cAAc,ICb/C,IAAMC,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,IAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAIhB,gBAAmB,IAAhBA,EAAe,EAAfA,SACZnC,EAAI,OAYV,OACE,yBAAK+B,MAAO,CAAEK,OAAO,YAAcC,SAAU,IAAKC,QAAQ,WACxD,4BAAQP,MAAO,CAAEQ,aAAa,WAC5B,kBAAC,IAAD,CAAML,GAAG,IAAIH,MAAO,CAAES,WAAW,OAASC,gBAAgB,SACxD,wBAAIV,MAAO,CAAEC,QAAQ,WAAchC,EAAK0C,KAAKC,aAAaC,SAE5D,wBAAIb,MAAO,CAAEc,UAAU,OAASC,MAAM,UACpC,kBAAC,EAAD,CAAUZ,GAAG,KAAb,QACA,kBAAC,EAAD,CAAUA,GAAG,WAAb,SACA,kBAAC,EAAD,CAAUA,GAAG,aAAb,YAEF,8BAEDC,EACD,4BAAKnC,EAAK0C,KAAKC,aAAaI,OAC5B,6BACA,4BAAQhB,MAAO,CAAEQ,aAAa,WAC1B,uBAAGR,MAAO,CAAEC,QAAQ,SAAWgB,MAAO,UAAtC,kCAAiFhD,EAAK0C,KAAKC,aAAaC","file":"component---src-pages-my-files-js-25df68af4252ef2d20ea.js","sourcesContent":["import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout.js\";\r\n\r\n\r\n/*\r\nhow doe this work??? Especially this part:\r\n({ node }, index) =>\r\n\r\n\r\n{data.allFile.edges.map(({ node }, index) => (\r\n              <tr key={index}>\r\n                <td>{node.base}</td>\r\n                <td>{node.prettySize}</td>\r\n                <td>{node.relativeDirectory}</td>\r\n                <td>{node.name}</td>\r\n              </tr>\r\n            ))}\r\n\r\n\r\n\r\n\r\n*/\r\n\r\nexport default ( {data} ) => {\r\n    console.log(data)\r\n    return (\r\n        <Layout>\r\n      <div>\r\n        <h1>My Site's Files</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>base</th>\r\n              <th>prettySize</th>\r\n              <th>relativeDirectory</th>\r\n              <th>name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody> \r\n            {data.allFile.edges.map(({ node }, index) => (\r\n              <tr key={index}>\r\n                <td>{node.base}</td>\r\n                <td>{node.prettySize}</td>\r\n                <td>{node.relativeDirectory}</td>\r\n                <td>{node.name}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Layout>\r\n    )\r\n\r\n    }\r\n\r\nexport const query = graphql` \r\nquery {\r\n    allFile {\r\n      edges {\r\n        node {\r\n          id\r\n          base\r\n          prettySize\r\n          relativeDirectory\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ` \r\n  ","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\r\n\r\nconst ListLink = props => (\r\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\r\n    <Link to={props.to}>{props.children}</Link>\r\n  </li>\r\n)\r\n\r\nexport default ({ children }) => {\r\nconst data = useStaticQuery (\r\n  graphql`\r\n  query {\r\n    site {\r\n      siteMetadata{\r\n        title\r\n        author\r\n      }\r\n    }\r\n  }\r\n  `\r\n)\r\nreturn (\r\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\r\n    <header style={{ marginBottom: `1.5rem` }}>\r\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\r\n        <h3 style={{ display: `inline` }}>{data.site.siteMetadata.author}</h3>\r\n      </Link>\r\n      <ul style={{ listStyle: `none`, float: `right` }}>\r\n        <ListLink to=\"/\">Home</ListLink>\r\n        <ListLink to=\"/about/\">About</ListLink>\r\n        <ListLink to=\"/contact/\">Contact</ListLink>\r\n      </ul>\r\n      <hr />\r\n    </header>\r\n    {children}\r\n    <h3>{data.site.siteMetadata.title}</h3>\r\n    <hr />\r\n    <footer style={{ marginBottom: `1.5rem` }}>\r\n        <p style={{ display: `inline`, align: \"right\" }}>2019 Design and Development by {data.site.siteMetadata.author}</p>\r\n    </footer>\r\n  </div>\r\n)\r\n}"],"sourceRoot":""}